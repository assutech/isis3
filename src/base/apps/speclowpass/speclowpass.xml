<?xml version="1.0" encoding="UTF-8"?>

<application name="speclowpass" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Apply spectral low pass filter to a cube
  </brief>

  <description>
    This program applies a spectral low pass filter or blurring filter to a cube. An NxM 
    boxcar is moved through the cube and average of the boxcar at each position 
    is computed. This average, which effectively blurs the data, is written to 
    the output cube.  In general, the larger the boxcar the more the output cube
    is blurred. For example, a 101x101 boxcar will cause more blurring than a
    3x3 boxcar.
  </description>

  <category>
    <categoryItem>Filters</categoryItem>
  </category>

  <seeAlso>
    <applications>
      <item>spechighpass</item>
      <item>specdivfilter</item>
    </applications>
  </seeAlso>

  <oldName>
    <item>boxfilter</item>
  </oldName>

  <history>
    <change name="Stacy Alley" date="2008-09-02">
      Original version
    </change>
  </history>

  <groups>
    <group name="Files">
      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input file
        </brief>
        <description>
	        Input cube to filter
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>
      <parameter name="TO">
        <type>cube</type>
        <fileMode>output</fileMode>
        <brief>
          Output speclowpass cube
        </brief>
        <description>
	        The resultant filtered cube
        </description>
      </parameter>
    </group>

    <group name="Boxcar Size">
      <parameter name="BANDS">
        <type>integer</type>
        <brief>
          Number of bands in boxcar
        </brief>

        <description>
	        This is the total number of bands in the boxcar.  It must be odd and
          can not exceed twice the number of samples in the cube.  In general, the
          size of the boxcar does not cause the program to operate significantly
          slower.
        </description>
        <odd />
        <minimum inclusive="yes">1</minimum>
      </parameter>
    </group>

    <group name="Boxcar Settings">
      <parameter name="LOW">
        <type>double</type>
        <brief>
          Minimum valid DN
        </brief>
        <description>
          Valid minimum pixel value that will be used in boxcar computation.  If
          a pixel value is less than LOW then it will not be used when computing
          the average.
        </description>
        <internalDefault>
          Use all pixels
        </internalDefault>
        <lessThan>
          <item>HIGH</item>
        </lessThan>
      </parameter>

      <parameter name="HIGH">
        <type>double</type>
        <brief>
          Maximum valid DN
        </brief>
        <description>
          Valid maximum pixel value that will be used in boxcar computation.  If
          a pixel value is greater than HIGH then it will not be used when
          computing the average.
        </description>
        <internalDefault>
          Use all pixels
        </internalDefault>
        <greaterThan>
          <item>LOW</item>
        </greaterThan>
      </parameter>    
    </group>
  </groups>
  
  <examples>
    <example>
      <brief>
         Running a 3x3 boxcar on all pixels
      </brief>
      <description>
	 The speclowpass filter 
      </description>
      <terminalInterface>
        <commandLine>
	  from= peaks.cub
	  to=3x3lowpass.cub
	  samples=3
	  lines=3
	</commandLine>
	<description>
	  This configuration creates a relatively small filter, resulting in a
	  slight amount of blurring. 
	</description>
      </terminalInterface>
      
      <guiInterfaces>
        <guiInterface>
	  <image width="456" height="629" 
	    src="assets/images/3x3gui.jpg">
	    <brief>
	    Example GUI
	    </brief>
	    <description>
	      Screenshot of the GUI set to filter all pixels for the image using
	      a three by three boxcar. Note that as many of the default 
	      parameters as are allowed are being used.
	    </description>
	    <thumbnail width="145" height="200" caption="speclowpass gui" 
	     src="assets/thumbs/3x3gui.jpg" />
	  </image>
	</guiInterface>
      </guiInterfaces>
      
      <inputImages>
        <image width="500" height="500" src="assets/images/peaks.jpg">
	  <brief>
	    Input image before the speclowpass filter.
	  </brief>
	  <description>
 	    Here we see the original cube. The areas of greatest interest are 
	    those with a great deal of contrast such as edges.
	  </description>
	  <thumbnail caption= "The image before the filter" 
	   src="assets/thumbs/peaks.jpg" width="200" height="200"/>
	  <parameterName>FROM</parameterName>
	</image>
      </inputImages>
      
      <outputImages>
        <image width="500" height="500" src="assets/images/3x3lowpass.jpg">
	  <brief>
	  Output image after speclowpass
	  </brief>
	  <description>
            After the filter, the entire image is somewhat softer. The difference
	    may be hard to detect on uniform areas, but the sections of the 
	    image that previously were sharply contrasted are now blurred. As
	    this particular configuration has been set for a small filter, the
	    results are obtained quickly and are more subtle than a large filter.
	  </description>
	  <thumbnail caption= "The image after the filter" 
	  src="assets/thumbs/3x3lowpass.jpg" width="200" height="200"/>
	  <parameterName>TO</parameterName>
	</image>
      </outputImages>
    </example>
    
    <example>
      <brief>
         Running a 21x21 boxcar on all pixels
      </brief>
      <description>
	 The speclowpass filter is used again here, but at a much more intense level 
      </description>
      <terminalInterface>
        <commandLine>
	  from= peaks.cub
	  to=bigLowpass.cub
	  samples=21
	  lines=21
	</commandLine>
	<description>
	  This configuration creates a relatively large filter, resulting in a
	  great amount of blurring.
	</description>
      </terminalInterface>
      
      <guiInterfaces>
        <guiInterface>
	  <image width="456" height="629" 
	    src="assets/images/bigLowpassGui.jpg">
	    <brief>
	    Example GUI
	    </brief>
	    <description>
	      Screenshot of the GUI set to filter all pixels for the image using
	      a 21 by 21 boxcar. This configuration will be slightly slower than
	      in the previous example, due to the increased boxcar size.
	    </description>
	    <thumbnail width="145" height="200" caption="speclowpass gui" 
	     src="assets/thumbs/bigLowpassGui.jpg" />
	  </image>
	</guiInterface>
      </guiInterfaces>
      
      <inputImages>
        <image width="500" height="500" src="assets/images/peaks.jpg">
	  <brief>
	    Input image before the speclowpass filter.
	  </brief>
	  <description>
 	    Here we see the original cube. The areas of greatest interest are 
	    those with a great deal of contrast such as edges.
	  </description>
	  <thumbnail caption= "The image before the filter" 
	   src="assets/thumbs/peaks.jpg" width="200" height="200"/>
	  <parameterName>FROM</parameterName>
	</image>
      </inputImages>
      
      <outputImages>
        <image width="500" height="500" src="assets/images/bigLowpass.jpg">
	  <brief>
	  Output image after speclowpass
	  </brief>
	  <description>
            As seen here, the 21 by 21 boxcar blurs the image to a great extent.
	    In fact, there seems to be little purpose for ever using a square
	    boxcar this large, except for the purpose of illustrating the effect
	    of the speclowpass.
	  </description>
	  <thumbnail caption= "The image after the filter" 
	  src="assets/thumbs/bigLowpass.jpg" width="200" height="200"/>
	  <parameterName>TO</parameterName>
	</image>
      </outputImages>
    </example>
  </examples>
</application>
